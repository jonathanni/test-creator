JFrame(name=frame, title=Question Creation, size=packed, onWindowClosing=[exit]):
  - JPanel(name=questionTypeContainer):
     - JPanel(name=questionTypeController):
        - JRadioButton(name=rb1, text=Multiple Choice Question, selected=true, onAction=[chMCQPanel, chMCQLabel])
        - JRadioButton(name=rb2, text=True/False Question, onAction=[chTFQPanel, chTFQLabel])
        - JRadioButton(name=rb3, text=Fill in the Blank Question, onAction=[chFIBQPanel, chFIBQLabel])
        - ButtonGroup: [rb1, rb2, rb3]
     - MigLayout: |
         [pref]
         "Pick a Question Type"
         questionTypeController
  - JLabel(name=questionLabel, text=Create New Multiple Choice Question):
  - JScrollPane(name=questionScrollPanel, vScrollBar=asNeeded, hScrollBar=never):
     JTextArea(name=questionDescription, rows=5):
  - JPanel(name=tquestionContainer):
     - JPanel(name=MCQuestionContainer):
        - JCheckBox(name=questionMixable, selected=true, text="Randomize Choices?")
        - JPanel(name=mcChoicePanel):
           - JScrollPane(name=mcChoiceScrollPanel):
              JList(name=mcChoices)
           - JPanel(name=mcChoiceButtonPanel):
              - JButton(name=editC, text=Edit Choice, onAction=[editChoice])
              - JButton(name=addC, text=Add Choice, onAction=[addChoice])
              - JButton(name=remC, text=Remove Choice, enabled=false, onAction=[removeChoice])
              - JButton(name=moveUpC, text=Move Choice Up, onAction=[moveUpChoice])
              - JButton(name=moveDownC, text=Move Choice Down, onAction=[moveDownChoice])
              - JButton(name=setC, text=Set as Correct Answer, onAction=[setChoice])
              - MigLayout: |
                  [pref]
                  editC
                  moveUpC                 addC
                  moveDownC               remC
                  setC
           - MigLayout: |
               [grow,100]             [pref]
               mcChoiceScrollPanel    mcChoiceButtonPanel
        - MigLayout: |
            [pref]
            questionMixable
            mcChoicePanel
     - JPanel(name=tfQuestionContainer):
        - JPanel(name=tfController):
           - JRadioButton(name=rbTrue, text=True, selected=true)
           - JRadioButton(name=rbFalse, text=False)
           - ButtonGroup: [rbTrue, rbFalse]
        - MigLayout: |
            [pref]
            tfController
     - JPanel(name=FIBQuestionContainer):
        - JCheckBox(name=caseSensitive, text="Case Sensitive?")
        - JCheckBox(name=whitespaceSensitive, text="Whitespace Sensitive?", selected=true)
        - JSpinner(name=blankSpaces)
        - JScrollPane(name=blankListScrollPanel):
           JList(name=fibBlankList)
        - JScrollPane(name=blankCAScrollPanel):
           JTable(name=fibBlankCAChoicesList)
        - JPanel(name=fibAllButtonPanel):
           - JPanel(name=fibCAButtonPanel):
              - JButton(name=addCA, text=Add Choice, onAction=[addCorrectAnswer])
              - JButton(name=remCA, text=Remove Choice, enabled=false, onAction=[removeCorrectAnswer])
              - JButton(name=moveUpCA, text=Move Choice Up, onAction=[moveUpCorrectAnswer])
              - JButton(name=moveDownCA, text=Move Choice Down, onAction=[moveDownCorrectAnswer])
              - MigLayout: |
                  [pref]
                  moveUpCA            addCA
                  moveDownCA          remCA
           - MigLayout: |
               [pref]
               fibCAButtonPanel
        - MigLayout: |
            [pref]
            "In order to create a fill in the blank question, each blank needs to have a '___.' (three underscores and a .)"
            caseSensitive,whitespaceSensitive
            blankSpaces,"(max 255)"
            blankListScrollPanel,blankCAScrollPanel,fibAllButtonPanel
     - CardLayout(name=questionLayout): [MCQuestionContainer, TFQuestionContainer, FIBQuestionContainer]
  - JButton(name=exitButton, text=Save and Return, onAction=[$validate, validateData, exit])
  - MigLayout: |
      [pref]                  [grow]
      questionTypeContainer+*
      questionLabel+*
      "Description: "         questionScrollPanel
      tquestionContainer+*
      |exitButton
validate:
  - questionDescription.text: {label: Question Description, mandatory: true, minLength : 1}